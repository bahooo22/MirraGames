# Использовать официальный Playwright образ
FROM mcr.microsoft.com/playwright/dotnet:v1.55.0-jammy AS playwright

# Stage 1: build environment
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build
WORKDIR /src

# Кэшируем NuGet пакеты
COPY *.sln ./
COPY GameReleases.WebApi/GameReleases.WebApi.csproj GameReleases.WebApi/
COPY GameReleases.Core/GameReleases.Core.csproj GameReleases.Core/
COPY GameReleases.Infrastructure/GameReleases.Infrastructure.csproj GameReleases.Infrastructure/

RUN dotnet restore GameReleases.sln

# Копируем остальной код
COPY . .

# Устанавливаем Playwright CLI
RUN dotnet tool install --global Microsoft.Playwright.CLI
ENV PATH="$PATH:/root/.dotnet/tools"

# Сборка
WORKDIR /src/GameReleases.WebApi
RUN dotnet build -c Release -o /app/build

# --- Stage 2: Publish ---
FROM build AS publish
RUN dotnet publish -c Release -o /app/publish /p:UseAppHost=false

# --- Stage 3: Runtime ---
FROM mcr.microsoft.com/dotnet/aspnet:8.0 AS final
WORKDIR /app
EXPOSE 8080
EXPOSE 443

# Копируем опубликованный артефакт
COPY --from=publish /app/publish .

# Копируем браузеры из Playwright образа
COPY --from=playwright /ms-playwright /ms-playwright

# Устанавливаем системные зависимости для Chromium / WebKit / Firefox
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
      libglib2.0-0 libnss3 libnspr4 libatk1.0-0 libatk-bridge2.0-0 \
      libcups2 libdrm2 libxkbcommon0 libxcomposite1 libxdamage1 \
      libxrandr2 libgbm1 libasound2 libxshmfence1 libx11-6 \
      libxext6 libxfixes3 libexpat1 libdbus-1-3 libatspi2.0-0 \
      libxcb1 libpangocairo-1.0-0 libpango-1.0-0 libgtk-3-0 \
      fonts-liberation libxss1 libxtst6 && \
    rm -rf /var/lib/apt/lists/*

# Симлинк, чтобы Playwright нашёл браузеры
RUN mkdir -p /root/.cache && ln -sf /ms-playwright /root/.cache/ms-playwright

# Чистим всё лишнее
RUN rm -rf /root/.nuget /tmp/*

ENTRYPOINT ["dotnet", "GameReleases.WebApi.dll"]