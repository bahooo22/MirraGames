services:
  postgres:
    image: postgres:16
    container_name: postgres
    environment:
      POSTGRES_DB: game_releases
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - game-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d game_releases"]
      interval: 5s
      timeout: 3s
      retries: 20

  clickhouse:
    image: clickhouse/clickhouse-server:24.5
    container_name: clickhouse
    environment:
      CLICKHOUSE_DB: game_analytics
      CLICKHOUSE_USER: default
      CLICKHOUSE_PASSWORD: ""
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - clickhouse_data:/var/lib/clickhouse
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    networks:
      - game-network

  migrate:
    build:
      context: .
      dockerfile: Dockerfile
      target: migrate
    container_name: migrate
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=game_releases;Username=postgres;Password=1234
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - game-network

  game-releases-api:
    build:
      context: .
      dockerfile: Dockerfile
      target: api
    container_name: game-releases-api
    ports:
      - "8080:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=game_releases;Username=postgres;Password=1234
      - ConnectionStrings__ClickHouseConnection=Host=clickhouse;Port=8123;Database=game_analytics;Username=default;Password=
      - JwtSettings__Secret=your-super-secret-key-at-least-32-characters-long
      - JwtSettings__Issuer=GameReleasesAPI
      - JwtSettings__Audience=GameReleasesClient
      - JwtSettings__ExpirationMinutes=60
      - ENABLE_SWAGGER=true
    depends_on:
      postgres:
        condition: service_healthy
      clickhouse:
        condition: service_started
      migrate:
        condition: service_completed_successfully
    networks:
      - game-network
    profiles: ["prod"]

  # Dev режим
  game-releases-api-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: build
    container_name: game-releases-api-dev
    ports:
      - "8080:8080"
    command: dotnet watch --project /src/GameReleases.WebApi/GameReleases.WebApi.csproj run
    volumes:
      - .:/src
      - ~/.nuget/packages:/root/.nuget/packages
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:8080
      ConnectionStrings__DefaultConnection: Host=postgres;Port=5432;Database=game_releases;Username=postgres;Password=1234
      ConnectionStrings__ClickHouseConnection: Host=clickhouse;Port=8123;Database=game_analytics;Username=default;Password=
    depends_on:
      postgres:
        condition: service_healthy
      clickhouse:
        condition: service_started
    networks:
      - game-network
    profiles: ["dev"]

volumes:
  postgres_data:
  clickhouse_data:

networks:
  game-network:
    driver: bridge
